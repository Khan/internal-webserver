// Add a new entry for your metric:
//   metricName: what the metric will be called in stackdriver.  We
//       will disaggregate the metric based on magic %(field)s strings
//       in the metric name.  For instance, 'log.404.%(metric)s will
//       store 404s separate for each appengine module (aka service).
//       Here is the list of fields you can disaggregate on:
//           %(module)s: module_id: the appengine module which logged the msg
//           %(browser)s: elog_browser: the browser of the request's client
//
//   query: the bigquery snippet that should match for the metric you
//       are collecting.  It can access the following variables:
//           status
//           log_messages (all log-messages for a single request, concatted)
//           TODO
//       Example queries:
//           SUM(status = 404)
//           AVG(INTEGER(REGEXP_EXTRACT(log_messages,
//                                      r"stats.time.server.wall_ms:(\d+)")))
//
//   frequency (optional): how often to run this query.  Default is
//        'minutely'.  Other options are 'hourly', 'daily', 'weekly'.
//
//   normalizeByRequests (optional): if present and true, normalize this
//        metric by the number of requests seen in the same time period.
//        That is, we store "<result of query>/<num requests seen>".
//        If the number of requests is 0, we do not store a data point.
//        Default is false.
//
//   normalizeByDaysAgo (optional): if present it must be a number X,
//        normalize this metric by the value of the metric exactly X
//        days ago.  (It's recommended that X be a multiple of 7.)
//        That is, we store "<result of query now>/<result of query a
//        X days ago>". If the value X days ago was 0, we do not store a
//        data point.  Default is 0, meaning not to normalize.
//
//   normalizeByLastDeploy (optional): if present and true, normalize this
//        metric by the value of the metric at the same time-delta from
//        the previous deploy.  That is, if we are currently running a
//        deploy and set-default was called 124 seconds ago, then we will
//        calculate the value of this metric now, and also 124 seconds after
//        the prior set-default (before this one), and store the ratio of
//        the two.  If the value for the previous deploy was 0, we do not
//        store a data point.  Default is false.
[
    {
        "metricName": "logs.400.%(module)s",
        "query": "SUM(status = 400)"
    },
    {
        "metricName": "logs.401_or_403.%(module)s",
        "query": "SUM(status = 401 or status = 403)"
    },
    {
        "metricName": "logs.404.%(module)s",
        "query": "SUM(status = 404)"
    },
    {
        "metricName": "logs.500.%(module)s",
        "query": "SUM(status = 500)"
    },
    {
        "metricName": "logs.502_or_503.%(module)s",
        "query": "SUM(status = 502 or status = 503)"
    },
    {
        "metricName": "logs.conversions.problem_attempt.week_over_week",
        "query": "SUM(log_messages CONTAINS '\"conversion\": \"problem_attempt\"')",
        "normalizeByDaysAgo": 7,
        "normalizeByRequests": true
    },
    {
        "metricName": "logs.conversions.pageview.week_over_week",
        "query": "SUM(log_messages CONTAINS '\"conversion\": \"pageview\"')",
        "normalizeByDaysAgo": 7,
        "normalizeByRequests": true
    },
    {
        "metricName": "logs.conversions.video_started.week_over_week",
        "query": "SUM(log_messages CONTAINS '\"conversion\": \"video_started\"')",
        "normalizeByDaysAgo": 7,
        "normalizeByRequests": true
    },
    {
        "metricName": "logs.conversions.article_view.week_over_week",
        "query": "SUM(log_messages CONTAINS '\"conversion\": \"article_view\"')",
        "normalizeByDaysAgo": 7,
        "normalizeByRequests": true
    },
    {
        "metricName": "logs.conversions.scratchpad_updated.week_over_week",
        "query": "SUM(log_messages CONTAINS '\"conversion\": \"scratchpad_updated\"')",
        "normalizeByDaysAgo": 7,
        "normalizeByRequests": true
    }
]
