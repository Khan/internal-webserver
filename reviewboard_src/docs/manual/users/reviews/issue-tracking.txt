.. _issue-tracking:

==============
Issue Tracking
==============

.. versionadded:: 1.6

When reviewing code or other files, some comments are more critical than
others. The reviewer may just have a question or suggest something optional,
but they may also have a critical issue that must be resolved before the
change can be submitted.

Issue tracking enables reviewers to specify that their comment refers to
a defect in the code or file that must be resolved. The owner of the review
request will be able to see that issues were filed, and can resolve or discard
them one-by-one. This is a faster alternative to replying to each comment
with "Fixed."


Opening Issues
==============

Comment dialogs contain an :guilabel:`Open an issue` checkbox. Comments with
this checkbox checked will be filed as an open issue.

.. image:: comment-box.png

This checkbox is available when :ref:`reviewing diffs <reviewing-diffs>`,
:ref:`screenshots <reviewing-screenshots>`, and
:ref:`file attachments <reviewing-file-attachments>`.

By default, :guilabel:`Open an issue` is checked for new comments.

The checkbox can also be toggled by pressing :kbd:`Alt-I`.


Responding to Issues
====================

The owner of the review request will see extra buttons on the issue banners
below the comment in the reviews for any issues that are opened. These
buttons allow for quickly marking issues as either resolved or discarded.

.. image:: open-issue.png

Clicking :guilabel:`Fixed` will mark that particular issue as fixed,
letting other reviewers see that you've taken care of the issue.

Clicking :guilabel:`Drop` will drop that issue. This signals to the
reviewers that either their comment didn't make sense for one reason or
another, or that there's a disagreement about the issue. Generally, this
should be followed up with a comment.

.. image:: closed-issue.png

.. image:: dropped-issue.png

Issues that are unintentionally closed one way or another can be re-opened
by clicking :guilabel:`Re-open`.


.. comment: vim: ft=rst et ts=3
